{"version":3,"sources":["scrollspy.js"],"names":["define","browser","langx","eventer","$","ScrollSpy","element","options","this","$body","document","body","$scrollElement","is","window","mixin","DEFAULTS","selector","target","offsets","targets","activeTarget","scrollHeight","on","proxy","process","refresh","Plugin","option","each","$this","data","VERSION","offset","prototype","getScrollHeight","Math","max","documentElement","that","offsetMethod","offsetBase","isWindow","scrollTop","find","map","$el","href","attr","$href","test","length","top","sort","a","b","push","i","maxScroll","height","activate","clear","undefined","active","parents","addClass","parent","closest","trigger","parentsUntil","removeClass","old","fn","scrollspy","Constructor","noConflict","$spy","call"],"mappings":"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","file":"../scrollspy.js","sourcesContent":["define([\n  \"skylark-utils/browser\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/query\"\n],function(browser,langx,eventer,$){\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.7\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = langx.mixin({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', langx.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.7'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!langx.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n});\n"]}