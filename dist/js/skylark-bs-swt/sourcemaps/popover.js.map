{"version":3,"sources":["popover.js"],"names":["define","browser","langx","eventer","$","Plugin","option","this","each","$this","data","options","test","Popover","element","init","fn","tooltip","Error","VERSION","DEFAULTS","mixin","Constructor","placement","trigger","content","template","prototype","constructor","getDefaults","setContent","$tip","tip","title","getTitle","getContent","find","html","children","detach","end","removeClass","hide","hasContent","$e","$element","o","attr","call","arrow","$arrow","old","popover","noConflict"],"mappings":";;;;;;;AAAAA,QACE,wBACA,sBACA,wBACA,sBACA,aACA,SAASC,EAAQC,EAAMC,EAAQC,GAS/B,YAuEA,SAASC,GAAOC,GACd,MAAOC,MAAKC,KAAK,WACf,GAAIC,GAAUL,EAAEG,MACZG,EAAUD,EAAMC,KAAK,cACrBC,EAA2B,gBAAVL,IAAsBA,GAEtCI,GAAQ,eAAeE,KAAKN,KAC5BI,GAAMD,EAAMC,KAAK,aAAeA,EAAO,GAAIG,GAAQN,KAAMI,IACzC,gBAAVL,IAAoBI,EAAKJ,QA1ExC,GAAIO,GAAU,SAAUC,EAASH,GAC/BJ,KAAKQ,KAAK,UAAWD,EAASH,GAGhC,KAAKP,EAAEY,GAAGC,QAAS,KAAM,IAAIC,OAAM,8BAEnCL,GAAQM,QAAW,QAEnBN,EAAQO,SAAWlB,EAAMmB,SAAUjB,EAAEY,GAAGC,QAAQK,YAAYF,UAC1DG,UAAW,QACXC,QAAS,QACTC,QAAS,GACTC,SAAU,0IAOZb,EAAQc,UAAYzB,EAAMmB,SAAUjB,EAAEY,GAAGC,QAAQK,YAAYK,WAE7Dd,EAAQc,UAAUC,YAAcf,EAEhCA,EAAQc,UAAUE,YAAc,WAC9B,MAAOhB,GAAQO,UAGjBP,EAAQc,UAAUG,WAAa,WAC7B,GAAIC,GAAUxB,KAAKyB,MACfC,EAAU1B,KAAK2B,WACfT,EAAUlB,KAAK4B,YAEnBJ,GAAKK,KAAK,kBAAkB7B,KAAKI,QAAQ0B,KAAO,OAAS,QAAQJ,GACjEF,EAAKK,KAAK,oBAAoBE,WAAWC,SAASC,MAChDjC,KAAKI,QAAQ0B,KAA0B,gBAAXZ,GAAsB,OAAS,SAAY,QACvEA,GAEFM,EAAKU,YAAY,iCAIZV,EAAKK,KAAK,kBAAkBC,QAAQN,EAAKK,KAAK,kBAAkBM,QAGvE7B,EAAQc,UAAUgB,WAAa,WAC7B,MAAOpC,MAAK2B,YAAc3B,KAAK4B,cAGjCtB,EAAQc,UAAUQ,WAAa,WAC7B,GAAIS,GAAKrC,KAAKsC,SACVC,EAAKvC,KAAKI,OAEd,OAAOiC,GAAGG,KAAK,kBACW,kBAAbD,GAAErB,QACPqB,EAAErB,QAAQuB,KAAKJ,EAAG,IAClBE,EAAErB,UAGZZ,EAAQc,UAAUsB,MAAQ,WACxB,MAAQ1C,MAAK2C,OAAS3C,KAAK2C,QAAU3C,KAAKyB,MAAMI,KAAK,UAmBvD,IAAIe,GAAM/C,EAAEY,GAAGoC,OAEfhD,GAAEY,GAAGoC,QAAsB/C,EAC3BD,EAAEY,GAAGoC,QAAQ9B,YAAcT,EAM3BT,EAAEY,GAAGoC,QAAQC,WAAa,WAExB,MADAjD,GAAEY,GAAGoC,QAAUD,EACR5C","file":"../popover.js","sourcesContent":["define([\n  \"skylark-utils/browser\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/query\",\n  \"./tooltip\"  \n],function(browser,langx,eventer,$){\n/* ========================================================================\n * Bootstrap: popover.js v3.3.7\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.7'\n\n  Popover.DEFAULTS = langx.mixin({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = langx.mixin({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n});\n"]}