{"version":3,"sources":["placard.js"],"names":["define","langx","browser","eventer","noder","geom","$","old","fn","placard","EVENT_CALLBACK_MAP","accepted","cancelled","Placard","element","options","self","this","$element","mixin","defaults","attr","applyEllipsis","$accept","find","$cancel","$field","$footer","$header","$popup","actualValue","clickStamp","previousValue","revertOnCancel","length","isContentEditableDiv","is","isInput","divInTextareaMode","on","proxy","show","keyComplete","hide","complete","e","preventDefault","_isShown","hasClass","_closeOtherPlacards","otherPlacards","document","data","explicit","prototype","constructor","action","func","obj","value","getValue","trigger","setValue","keyCode","blur","destroy","remove","off","each","val","outerHTML","disable","addClass","removeAttr","field","i","str","get","scrollLeft","scrollTop","clientHeight","scrollHeight","substring","enable","removeClass","externalClickListener","force","isExternalClick","externalClickAction","html","l","el","exceptions","externalClickExceptions","$originEl","target","contains","parents","suppressEllipsis","empty","append","showPlacard","css","outerHeight","Date","getTime","Math","floor","random","option","methodReturn","args","Array","slice","call","arguments","$set","$this","apply","undefined","onAccept","onCancel","Constructor","noConflict"],"mappings":"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","file":"../placard.js","sourcesContent":["define([\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\"\n],function(langx,browser,eventer,noder,geom,$){\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tvar old = $.fn.placard;\n\tvar EVENT_CALLBACK_MAP = { 'accepted': 'onAccept', 'cancelled': 'onCancel' };\n\n\t// PLACARD CONSTRUCTOR AND PROTOTYPE\n\n\tvar Placard = function Placard(element, options) {\n\t\tvar self = this;\n\t\tthis.$element = $(element);\n\t\tthis.options = langx.mixin({}, $.fn.placard.defaults, options);\n\n\t\tif(this.$element.attr('data-ellipsis') === 'true'){\n\t\t\tthis.options.applyEllipsis = true;\n\t\t}\n\n\t\tthis.$accept = this.$element.find('.placard-accept');\n\t\tthis.$cancel = this.$element.find('.placard-cancel');\n\t\tthis.$field = this.$element.find('.placard-field');\n\t\tthis.$footer = this.$element.find('.placard-footer');\n\t\tthis.$header = this.$element.find('.placard-header');\n\t\tthis.$popup = this.$element.find('.placard-popup');\n\n\t\tthis.actualValue = null;\n\t\tthis.clickStamp = '_';\n\t\tthis.previousValue = '';\n\t\tif (this.options.revertOnCancel === -1) {\n\t\t\tthis.options.revertOnCancel = (this.$accept.length > 0);\n\t\t}\n\n\t\t// Placard supports inputs, textareas, or contenteditable divs. These checks determine which is being used\n\t\tthis.isContentEditableDiv = this.$field.is('div');\n\t\tthis.isInput = this.$field.is('input');\n\t\tthis.divInTextareaMode = (this.isContentEditableDiv && this.$field.attr('data-textarea') === 'true');\n\n\t\tthis.$field.on('focus.fu.placard', langx.proxy(this.show, this));\n\t\tthis.$field.on('keydown.fu.placard', langx.proxy(this.keyComplete, this));\n\t\tthis.$element.on('close.fu.placard', langx.proxy(this.hide, this));\n\t\tthis.$accept.on('click.fu.placard', langx.proxy(this.complete, this, 'accepted'));\n\t\tthis.$cancel.on('click.fu.placard', function (e) {\n\t\t\te.preventDefault(); self.complete('cancelled');\n\t\t});\n\n\t\tthis.applyEllipsis();\n\t};\n\n\tvar _isShown = function _isShown(placard) {\n\t\treturn placard.$element.hasClass('showing');\n\t};\n\n\tvar _closeOtherPlacards = function _closeOtherPlacards() {\n\t\tvar otherPlacards;\n\n\t\totherPlacards = $(document).find('.placard.showing');\n\t\tif (otherPlacards.length > 0) {\n\t\t\tif (otherPlacards.data('fu.placard') && otherPlacards.data('fu.placard').options.explicit) {\n\t\t\t\treturn false;//failed\n\t\t\t}\n\n\t\t\totherPlacards.placard('externalClickListener', {}, true);\n\t\t}\n\n\t\treturn true;//succeeded\n\t};\n\n\tPlacard.prototype = {\n\t\tconstructor: Placard,\n\n\t\tcomplete: function complete(action) {\n\t\t\tvar func = this.options[ EVENT_CALLBACK_MAP[action] ];\n\n\t\t\tvar obj = {\n\t\t\t\tpreviousValue: this.previousValue,\n\t\t\t\tvalue: this.getValue()\n\t\t\t};\n\n\t\t\tif (func) {\n\t\t\t\tfunc(obj);\n\t\t\t\tthis.$element.trigger(action + '.fu.placard', obj);\n\t\t\t} else {\n\t\t\t\tif (action === 'cancelled' && this.options.revertOnCancel) {\n\t\t\t\t\tthis.setValue(this.previousValue, true);\n\t\t\t\t}\n\n\t\t\t\tthis.$element.trigger(action + '.fu.placard', obj);\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t},\n\n\t\tkeyComplete: function keyComplete(e) {\n\t\t\tif (((this.isContentEditableDiv && !this.divInTextareaMode) || this.isInput) && e.keyCode === 13) {\n\t\t\t\tthis.complete('accepted');\n\t\t\t\tthis.$field.blur();\n\t\t\t} else if (e.keyCode === 27) {\n\t\t\t\tthis.complete('cancelled');\n\t\t\t\tthis.$field.blur();\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function destroy() {\n\t\t\tthis.$element.remove();\n\t\t\t// remove any external bindings\n\t\t\t$(document).off('click.fu.placard.externalClick.' + this.clickStamp);\n\t\t\t// set input value attribute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// return string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdisable: function disable() {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$field.attr('disabled', 'disabled');\n\t\t\tif (this.isContentEditableDiv) {\n\t\t\t\tthis.$field.removeAttr('contenteditable');\n\t\t\t}\n\t\t\tthis.hide();\n\t\t},\n\n\t\tapplyEllipsis: function applyEllipsis() {\n\t\t\tvar field, i, str;\n\t\t\tif (this.options.applyEllipsis) {\n\t\t\t\tfield = this.$field.get(0);\n\t\t\t\tif ((this.isContentEditableDiv && !this.divInTextareaMode) || this.isInput) {\n\t\t\t\t\tfield.scrollLeft = 0;\n\t\t\t\t} else {\n\t\t\t\t\tfield.scrollTop = 0;\n\t\t\t\t\tif (field.clientHeight < field.scrollHeight) {\n\t\t\t\t\t\tthis.actualValue = this.getValue();\n\t\t\t\t\t\tthis.setValue('', true);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\twhile (field.clientHeight >= field.scrollHeight) {\n\t\t\t\t\t\t\tstr += this.actualValue[i];\n\t\t\t\t\t\t\tthis.setValue(str + '...', true);\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr = (str.length > 0) ? str.substring(0, str.length - 1) : '';\n\t\t\t\t\t\tthis.setValue(str + '...', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tenable: function enable() {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$field.removeAttr('disabled');\n\t\t\tif (this.isContentEditableDiv) {\n\t\t\t\tthis.$field.attr('contenteditable', 'true');\n\t\t\t}\n\t\t},\n\n\t\texternalClickListener: function externalClickListener(e, force) {\n\t\t\tif (force === true || this.isExternalClick(e)) {\n\t\t\t\tthis.complete(this.options.externalClickAction);\n\t\t\t}\n\t\t},\n\n\t\tgetValue: function getValue() {\n\t\t\tif (this.actualValue !== null) {\n\t\t\t\treturn this.actualValue;\n\t\t\t} else if (this.isContentEditableDiv) {\n\t\t\t\treturn this.$field.html();\n\t\t\t} else {\n\t\t\t\treturn this.$field.val();\n\t\t\t}\n\t\t},\n\n\t\thide: function hide() {\n\t\t\tif (!this.$element.hasClass('showing')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$element.removeClass('showing');\n\t\t\tthis.applyEllipsis();\n\t\t\t$(document).off('click.fu.placard.externalClick.' + this.clickStamp);\n\t\t\tthis.$element.trigger('hidden.fu.placard');\n\t\t},\n\n\t\tisExternalClick: function isExternalClick(e) {\n\t\t\tvar el = this.$element.get(0);\n\t\t\tvar exceptions = this.options.externalClickExceptions || [];\n\t\t\tvar $originEl = $(e.target);\n\t\t\tvar i, l;\n\n\t\t\tif (noder.contains(el,e.target)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tfor (i = 0, l = exceptions.length; i < l; i++) {\n\t\t\t\t\tif ($originEl.is(exceptions[i]) || $originEl.parents(exceptions[i]).length > 0) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * setValue() sets the Placard triggering DOM element's display value\n\t\t *\n\t\t * @param {String} the value to be displayed\n\t\t * @param {Boolean} If you want to explicitly suppress the application\n\t\t *\t\t\t\t\tof ellipsis, pass `true`. This would typically only be\n\t\t *\t\t\t\t\tdone from internal functions (like `applyEllipsis`)\n\t\t *\t\t\t\t\tthat want to avoid circular logic. Otherwise, the\n\t\t *\t\t\t\t\tvalue of the option applyEllipsis will be used.\n\t\t * @return {Object} jQuery object representing the DOM element whose\n\t\t *\t\t\t\t\tvalue was set\n\t\t */\n\t\tsetValue: function setValue(val, suppressEllipsis) {\n\t\t\t//if suppressEllipsis is undefined, check placards init settings\n\t\t\tif (typeof suppressEllipsis === 'undefined') {\n\t\t\t\tsuppressEllipsis = !this.options.applyEllipsis;\n\t\t\t}\n\n\t\t\tif (this.isContentEditableDiv) {\n\t\t\t\tthis.$field.empty().append(val);\n\t\t\t} else {\n\t\t\t\tthis.$field.val(val);\n\t\t\t}\n\n\t\t\tif (!suppressEllipsis && !_isShown(this)) {\n\t\t\t\tthis.applyEllipsis();\n\t\t\t}\n\n\t\t\treturn this.$field;\n\t\t},\n\n\t\tshow: function show() {\n\t\t\tif (_isShown(this)) { return; }\n\t\t\tif (!_closeOtherPlacards()) { return; }\n\n\t\t\tthis.previousValue = (this.isContentEditableDiv) ? this.$field.html() : this.$field.val();\n\n\t\t\tif (this.actualValue !== null) {\n\t\t\t\tthis.setValue(this.actualValue, true);\n\t\t\t\tthis.actualValue = null;\n\t\t\t}\n\n\t\t\tthis.showPlacard();\n\t\t},\n\n\t\tshowPlacard: function showPlacard() {\n\t\t\tthis.$element.addClass('showing');\n\n\t\t\tif (this.$header.length > 0) {\n\t\t\t\tthis.$popup.css('top', '-' + this.$header.outerHeight(true) + 'px');\n\t\t\t}\n\n\t\t\tif (this.$footer.length > 0) {\n\t\t\t\tthis.$popup.css('bottom', '-' + this.$footer.outerHeight(true) + 'px');\n\t\t\t}\n\n\t\t\tthis.$element.trigger('shown.fu.placard');\n\t\t\tthis.clickStamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\n\t\t\tif (!this.options.explicit) {\n\t\t\t\t$(document).on('click.fu.placard.externalClick.' + this.clickStamp, langx.proxy(this.externalClickListener, this));\n\t\t\t}\n\t\t}\n\t};\n\n\t// PLACARD PLUGIN DEFINITION\n\n\t$.fn.placard = function (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.placard');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.placard', (data = new Placard(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.placard.defaults = {\n\t\tonAccept: undefined,\n\t\tonCancel: undefined,\n\t\texternalClickAction: 'cancelled',\n\t\texternalClickExceptions: [],\n\t\texplicit: false,\n\t\trevertOnCancel: -1,//negative 1 will check for an '.placard-accept' button. Also can be set to true or false\n\t\tapplyEllipsis: false\n\t};\n\n\t$.fn.placard.Constructor = Placard;\n\n\t$.fn.placard.noConflict = function () {\n\t\t$.fn.placard = old;\n\t\treturn this;\n\t};\n\n\t/*\n\t// DATA-API\n\t$(document).on('focus.fu.placard.data-api', '[data-initialize=placard]', function (e) {\n\t\tvar $control = $(e.target).closest('.placard');\n\t\tif (!$control.data('fu.placard')) {\n\t\t\t$control.placard($control.data());\n\t\t}\n\t});\n\n\t// Must be domReady for AMD compatibility\n\t$(function () {\n\t\t$('[data-initialize=placard]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif ($this.data('fu.placard')) return;\n\t\t\t$this.placard($this.data());\n\t\t});\n\t});\n\t*/\n});\n"]}