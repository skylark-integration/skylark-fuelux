/**
 * skylark-bs-swt - The skylark bootstrap standard widget tookit
 * @author Hudaokeji, Inc.
 * @version v0.9.0-beta
 * @link https://github.com/skylarkui/skylark-bs-swt/
 * @license MIT
 */
define(["skylark-utils/browser","skylark-utils/langx","skylark-utils/eventer","skylark-utils/query"],function(t,e,s,i){"use strict";function n(t){return this.each(function(){var e=i(this),s=e.data("bs.button"),n="object"==typeof t&&t;s||e.data("bs.button",s=new o(this,n)),"toggle"==t?s.toggle():t&&s.setState(t)})}var o=function(t,s){this.$element=i(t),this.options=e.mixin({},o.DEFAULTS,s),this.isLoading=!1};o.VERSION="3.3.7",o.DEFAULTS={loadingText:"loading..."},o.prototype.setState=function(t){var s="disabled",i=this.$element,n=i.is("input")?"val":"html",o=i.data();t+="Text",null==o.resetText&&i.data("resetText",i[n]()),setTimeout(e.proxy(function(){i[n](null==o[t]?this.options[t]:o[t]),"loadingText"==t?(this.isLoading=!0,i.addClass(s).attr(s,s).prop(s,!0)):this.isLoading&&(this.isLoading=!1,i.removeClass(s).removeAttr(s).prop(s,!1))},this),0)},o.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var s=this.$element.find("input");"radio"==s.prop("type")?(s.prop("checked")&&(t=!1),e.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==s.prop("type")&&(s.prop("checked")!==this.$element.hasClass("active")&&(t=!1),this.$element.toggleClass("active")),s.prop("checked",this.$element.hasClass("active")),t&&s.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var a=i.fn.button;i.fn.button=n,i.fn.button.Constructor=o,i.fn.button.noConflict=function(){return i.fn.button=a,this},i(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var e=i(t.target).closest(".btn");n.call(e,"toggle"),i(t.target).is('input[type="radio"], input[type="checkbox"]')||(t.preventDefault(),e.is("input,button")?e.trigger("focus"):e.find("input:visible,button:visible").first().trigger("focus"))}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){i(t.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(t.type))})});
//# sourceMappingURL=sourcemaps/button.js.map
