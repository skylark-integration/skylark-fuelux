{"version":3,"sources":["button.js"],"names":["define","browser","langx","eventer","$","Plugin","option","this","each","$this","data","options","Button","toggle","setState","element","$element","mixin","DEFAULTS","isLoading","VERSION","loadingText","prototype","state","d","$el","val","is","resetText","setTimeout","proxy","addClass","attr","prop","removeClass","removeAttr","changed","$parent","closest","length","$input","find","hasClass","toggleClass","trigger","old","fn","button","Constructor","noConflict","document","on","e","$btn","target","call","preventDefault","first","test","type"],"mappings":";;;;;;;AAAAA,QACE,wBACA,sBACA,wBACA,uBACA,SAASC,EAAQC,EAAMC,EAAQC,GAS/B,YAmEA,SAASC,GAAOC,GACd,MAAOC,MAAKC,KAAK,WACf,GAAIC,GAAUL,EAAEG,MACZG,EAAUD,EAAMC,KAAK,aACrBC,EAA2B,gBAAVL,IAAsBA,CAEtCI,IAAMD,EAAMC,KAAK,YAAcA,EAAO,GAAIE,GAAOL,KAAMI,IAE9C,UAAVL,EAAoBI,EAAKG,SACpBP,GAAQI,EAAKI,SAASR,KAvEnC,GAAIM,GAAS,SAAUG,EAASJ,GAC9BJ,KAAKS,SAAYZ,EAAEW,GACnBR,KAAKI,QAAYT,EAAMe,SAAUL,EAAOM,SAAUP,GAClDJ,KAAKY,WAAY,EAGnBP,GAAOQ,QAAW,QAElBR,EAAOM,UACLG,YAAa,cAGfT,EAAOU,UAAUR,SAAW,SAAUS,GACpC,GAAIC,GAAO,WACPC,EAAOlB,KAAKS,SACZU,EAAOD,EAAIE,GAAG,SAAW,MAAQ,OACjCjB,EAAOe,EAAIf,MAEfa,IAAS,OAEa,MAAlBb,EAAKkB,WAAmBH,EAAIf,KAAK,YAAae,EAAIC,MAGtDG,WAAW3B,EAAM4B,MAAM,WACrBL,EAAIC,GAAoB,MAAfhB,EAAKa,GAAiBhB,KAAKI,QAAQY,GAASb,EAAKa,IAE7C,eAATA,GACFhB,KAAKY,WAAY,EACjBM,EAAIM,SAASP,GAAGQ,KAAKR,EAAGA,GAAGS,KAAKT,GAAG,IAC1BjB,KAAKY,YACdZ,KAAKY,WAAY,EACjBM,EAAIS,YAAYV,GAAGW,WAAWX,GAAGS,KAAKT,GAAG,KAE1CjB,MAAO,IAGZK,EAAOU,UAAUT,OAAS,WACxB,GAAIuB,IAAU,EACVC,EAAU9B,KAAKS,SAASsB,QAAQ,0BAEpC,IAAID,EAAQE,OAAQ,CAClB,GAAIC,GAASjC,KAAKS,SAASyB,KAAK,QACL,UAAvBD,EAAOP,KAAK,SACVO,EAAOP,KAAK,aAAYG,GAAU,GACtCC,EAAQI,KAAK,WAAWP,YAAY,UACpC3B,KAAKS,SAASe,SAAS,WACS,YAAvBS,EAAOP,KAAK,UAChBO,EAAOP,KAAK,aAAgB1B,KAAKS,SAAS0B,SAAS,YAAWN,GAAU,GAC7E7B,KAAKS,SAAS2B,YAAY,WAE5BH,EAAOP,KAAK,UAAW1B,KAAKS,SAAS0B,SAAS,WAC1CN,GAASI,EAAOI,QAAQ,cAE5BrC,MAAKS,SAASgB,KAAK,gBAAiBzB,KAAKS,SAAS0B,SAAS,WAC3DnC,KAAKS,SAAS2B,YAAY,UAqB9B,IAAIE,GAAMzC,EAAE0C,GAAGC,MAEf3C,GAAE0C,GAAGC,OAAqB1C,EAC1BD,EAAE0C,GAAGC,OAAOC,YAAcpC,EAM1BR,EAAE0C,GAAGC,OAAOE,WAAa,WAEvB,MADA7C,GAAE0C,GAAGC,OAASF,EACPtC,MAOTH,EAAE8C,UACCC,GAAG,2BAA4B,0BAA2B,SAAUC,GACnE,GAAIC,GAAOjD,EAAEgD,EAAEE,QAAQhB,QAAQ,OAC/BjC,GAAOkD,KAAKF,EAAM,UACZjD,EAAEgD,EAAEE,QAAQ3B,GAAG,iDAEnByB,EAAEI,iBAEEH,EAAK1B,GAAG,gBAAiB0B,EAAKT,QAAQ,SACrCS,EAAKZ,KAAK,gCAAgCgB,QAAQb,QAAQ,YAGlEO,GAAG,mDAAoD,0BAA2B,SAAUC,GAC3FhD,EAAEgD,EAAEE,QAAQhB,QAAQ,QAAQK,YAAY,QAAS,eAAee,KAAKN,EAAEO","file":"../button.js","sourcesContent":["define([\n  \"skylark-utils/browser\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/query\"\n],function(browser,langx,eventer,$){\n/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = langx.mixin({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.7'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout(langx.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d).prop(d, true)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d).prop(d, false)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault()\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus')\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n});\n"]}